<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
   "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<!-- Generated by Pod::Advent 0.18 (Pod::Simple 3.10, Perl::Tidy 20090616) on 2009-12-09 18:06:26 -->
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<title>2009 Perl Advent Calendar: No trace of X-mas</title>
<link rel="stylesheet" href="../style.css" type="text/css" />
<link rel="alternate" type="text/plain" href="mod8.pod" />
</head>
<body>
<h1><a href="../">Perl Advent Calendar 2009-12</a>-08</h1>
<h2 align="center">No trace of X-mas</h2>
<h3 align="center">by Jerrad Pierce</h3>
<p>Sometimes even peppering your perl with prints is more than you care for just to debug your code. Well, install <tt><a href="http://search.cpan.org/perldoc?Devel::Trace">Devel::Trace</a></tt> and you get a <tt><span class="w">sh</span> <span class="k">-x</span></tt> analog that's as easy as tacking <tt><span class="k">-d</span><span class="co">:</span><span class="w">Trace</span></tt> onto the commandline like so:</p>

<pre>
<span class="q">C:}/~/perl -d:Trace bin/whichpm Exporter</span>
<span class="c">&gt;&gt; bin/whichpm</span><span class="co">:</span><span class="n">6</span><span class="co">:</span> <span class="i">$VERSION</span> = <span class="n">0.02</span><span class="sc">;</span>
<span class="c">&gt;&gt; bin/whichpm</span><span class="co">:</span><span class="n">8</span><span class="co">:</span> <span class="k">foreach</span> <span class="k">my</span> <span class="i">$PM</span> <span class="s">(</span> <span class="i">@ARGV</span> <span class="s">)</span><span class="s">{</span>
<span class="c">&gt;&gt; bin/whichpm</span><span class="co">:</span><span class="n">9</span><span class="co">:</span>   <span class="k">eval</span> <span class="q">&quot;require $PM&quot;</span> || <span class="k">next</span><span class="sc">;</span>
<span class="w">Use</span> <span class="w">of</span> <span class="w">uninitialized</span> <span class="w">value</span> <span class="w">in</span> <span class="w">concatenation</span> <span class="s">(</span>.<span class="s">)</span> <span class="k">or</span> <span class="w">string</span> <span class="w">at</span> /<span class="w">usr</span>/<span class="w">lib</span>/<span class="w">perl5</span>/<span class="w">site_perl</span>/<span class="v">5.8.8</span>/<span class="w">Devel</span>/<span class="w">Trace</span>.<span class="w">pm</span> <span class="w">line</span> <span class="n">12.</span>                                             <span class="c">&gt;&gt; <span class="s">(</span><span class="k">eval</span> <span class="n">2</span><span class="s">)</span>[<span class="w">bin</span>/<span class="w">whichpm</span><span class="co">:</span><span class="n">9</span>]<span class="co">:</span><span class="n">3</span><span class="co">:</span> 
<span class="c">&gt;&gt; bin/whichpm</span><span class="co">:</span><span class="n">10</span><span class="co">:</span>   <span class="i">$PM</span> = <span class="w">File::Spec</span><span class="w">-&gt;catfile</span><span class="s">(</span><span class="k">split</span><span class="s">(</span><span class="q">/::/</span><span class="cm">,</span> <span class="i">$PM</span><span class="s">)</span><span class="s">)</span><span class="sc">;</span>
<span class="c">&gt;&gt; /usr/lib/perl5/5.8.8/File/Spec/Unix.pm</span><span class="co">:</span><span class="n">92</span><span class="co">:</span>     <span class="k">my</span> <span class="i">$self</span> = <span class="k">shift</span><span class="sc">;</span>
<span class="c">&gt;&gt; /usr/lib/perl5/5.8.8/File/Spec/Unix.pm</span><span class="co">:</span><span class="n">93</span><span class="co">:</span>     <span class="k">my</span> <span class="i">$file</span> = <span class="i">$self</span><span class="i">-&gt;canonpath</span><span class="s">(</span><span class="k">pop</span> <span class="i">@_</span><span class="s">)</span><span class="sc">;</span>
<span class="c">&gt;&gt; /usr/lib/perl5/5.8.8/File/Spec/Unix.pm</span><span class="co">:</span><span class="n">43</span><span class="co">:</span>     <span class="k">my</span> <span class="s">(</span><span class="i">$self</span><span class="cm">,</span><span class="i">$path</span><span class="s">)</span> = <span class="i">@_</span><span class="sc">;</span>
<span class="c">&gt;&gt; /usr/lib/perl5/5.8.8/File/Spec/Unix.pm</span><span class="co">:</span><span class="n">50</span><span class="co">:</span>     <span class="k">my</span> <span class="i">$node</span> = <span class="q">&#39;&#39;</span><span class="sc">;</span>
<span class="c">&gt;&gt; /usr/lib/perl5/5.8.8/File/Spec/Unix.pm</span><span class="co">:</span><span class="n">51</span><span class="co">:</span>     <span class="k">if</span> <span class="s">(</span> <span class="i">$^O</span> =~ <span class="q">m/^(?:qnx|nto|cygwin)$/</span> &amp;&amp; <span class="i">$path</span> =~ <span class="q">s:^(//[^/]+)(/|\z):/:s</span> <span class="s">)</span> <span class="s">{</span>
<span class="c">&gt;&gt; /usr/lib/perl5/5.8.8/File/Spec/Unix.pm</span><span class="co">:</span><span class="n">59</span><span class="co">:</span>     <span class="i">$path</span> =~ <span class="q">s|/+|/|g</span><span class="sc">;</span>                             <span class="c"># xx////xx  -&gt; xx/xx</span>
<span class="c">&gt;&gt; /usr/lib/perl5/5.8.8/File/Spec/Unix.pm</span><span class="co">:</span><span class="n">60</span><span class="co">:</span>     <span class="i">$path</span> =~ <span class="q">s@(/\.)+(/|\Z(?!\n))@/@g</span><span class="sc">;</span>             <span class="c"># xx/././xx -&gt; xx/xx</span>
<span class="c">&gt;&gt; /usr/lib/perl5/5.8.8/File/Spec/Unix.pm</span><span class="co">:</span><span class="n">61</span><span class="co">:</span>     <span class="i">$path</span> =~ <span class="q">s|^(\./)+||s</span> <span class="k">unless</span> <span class="i">$path</span> <span class="k">eq</span> <span class="q">&quot;./&quot;</span><span class="sc">;</span>    <span class="c"># ./xx      -&gt; xx</span>
<span class="q"><span class="c">&gt;&gt; /usr/lib/perl5/5.8.8/File/Spec/Unix.pm</span><span class="co">:</span><span class="n">62</span>      <span class="i">$path</span> =~ <span class="q">s|^/(\.\./)+|/|</span><span class="sc">;</span>                      <span class="c"># /../../xx -&gt; xx</span>
<span class="q"><span class="c">&gt;&gt; /usr/lib/perl5/5.8.8/File/Spec/Unix.pm</span><span class="co">:</span><span class="n">63</span>      <span class="i">$path</span> =~ <span class="q">s|^/\.\.$|/|</span><span class="sc">;</span>                         <span class="c"># /..       -&gt; /</span>
<span class="c">&gt;&gt; /usr/lib/perl5/5.8.8/File/Spec/Unix.pm</span><span class="co">:</span><span class="n">64</span><span class="co">:</span>     <span class="i">$path</span> =~ <span class="q">s|/\Z(?!\n)||</span> <span class="k">unless</span> <span class="i">$path</span> <span class="k">eq</span> <span class="q">&quot;/&quot;</span><span class="sc">;</span>          <span class="c"># xx/       -&gt; xx</span>
<span class="c">&gt;&gt; /usr/lib/perl5/5.8.8/File/Spec/Unix.pm</span><span class="co">:</span><span class="n">65</span><span class="co">:</span>     <span class="k">return</span> <span class="q">&quot;$node$path&quot;</span><span class="sc">;</span>
<span class="c">&gt;&gt; /usr/lib/perl5/5.8.8/File/Spec/Unix.pm</span><span class="co">:</span><span class="n">94</span><span class="co">:</span>     <span class="k">return</span> <span class="i">$file</span> <span class="k">unless</span> <span class="i">@_</span><span class="sc">;</span>
<span class="c">&gt;&gt; bin/whichpm</span><span class="co">:</span><span class="n">12</span><span class="co">:</span>   <span class="i">$PM</span> .= <span class="q">&#39;.pm&#39;</span> <span class="k">unless</span> <span class="i">$PM</span> =~ <span class="q">/\.pm$/</span><span class="sc">;</span>
<span class="c">&gt;&gt; bin/whichpm</span><span class="co">:</span><span class="n">13</span><span class="co">:</span>   <span class="k">print</span> <span class="i">$INC</span>{<span class="i">$PM</span>}<span class="cm">,</span> <span class="q">&#39; &#39;</span><span class="sc">;</span>
<span class="c">&gt;&gt; bin/whichpm</span><span class="co">:</span><span class="n">15</span><span class="co">:</span>   <span class="k">print</span> <span class="q">&quot;\n&quot;</span><span class="sc">;</span>
<span class="C">/usr/lib/perl5/5.8.8/Exporter.pm</span>
</pre>

<p>Unfortunately, many of the TODO items remain undone, probably because besides <a href="http://rt.cpan.org/Public/Bug/Display.html?id=22562">suffering from buffering</a> and some occasional indigestion with string <tt><span class="k">eval</span></tt>s, the elegantly simple code does what it's supposed to. Alas, this also means it's not yet possible to use <tt>Devel::Trace</tt> as a quine cheat, or tweak the output into a more convincing Hollywood-esque code crawl. However, in my experience, <acronym title="Dominus">everyone's favorite octopus-loving hacker</acronym> is usually willing to share commit bits to his toys with those willing to persistently provide patches.</p>
<p>To make up for perfunctory review, and recent gaps, we've amassed a collection of other advent calendars you might want to frequent this year in addition to this one. Some of them also feature perl, but all are geeky. Follow the <a href="http://delicious.com/perladvent/advent">Links</a> here, or the footer of the front page.</p>
<a name="mod8.pl" id="mod8.pl"></a><h2><a href="mod8.pl">mod8.pl</a></h2><pre>
   1 #!/usr/bin/perl -w                                                       
   2 <span class="k">use</span> <span class="w">strict</span><span class="sc">;</span>                                                              
   3 <span class="k">use</span> <span class="w">vars</span> <span class="q">&#39;$VERSION&#39;</span><span class="sc">;</span>                                                     
   4 <span class="k">use</span> <span class="w">File::Spec</span><span class="sc">;</span>                                                          
   5 
   6 <span class="i">$VERSION</span> = <span class="n">0.03</span><span class="sc">;</span>
   7 
   8 <span class="k">foreach</span> <span class="k">my</span> <span class="i">$PM</span> <span class="s">(</span> <span class="i">@ARGV</span> <span class="s">)</span><span class="s">{</span>
   9   <span class="k">eval</span> <span class="q">&quot;require $PM&quot;</span> || <span class="k">next</span><span class="sc">;</span>
  10   <span class="i">$PM</span> = <span class="w">File::Spec</span><span class="w">-&gt;catfile</span><span class="s">(</span><span class="k">split</span><span class="s">(</span><span class="q">/::/</span><span class="cm">,</span> <span class="i">$PM</span><span class="s">)</span><span class="s">)</span><span class="sc">;</span>
  11   <span class="i">$PM</span> .= <span class="q">&#39;.pm&#39;</span> <span class="k">unless</span> <span class="i">$PM</span> =~ <span class="q">/\.pm$/</span><span class="sc">;</span>         
  12   <span class="k">print</span> <span class="i">$INC</span>{<span class="i">$PM</span>}<span class="cm">,</span> <span class="q">&#39; &#39;</span><span class="sc">;</span>                       
  13 <span class="s">}</span>                                             
  14 <span class="k">print</span> <span class="q">&quot;\n&quot;</span><span class="sc">;</span>                                   
<a name="__END__"></a>  15 <span class="k">__END__                                       </span>
  16 
  17 <span class="pd">=pod</span>
  18 
  19 <span class="pd">=head1 NAME</span>
  20 
  21 <span class="pd">whichpm - lists real paths of specified modules</span>
  22 
  23 <span class="pd">=head1 SYNOPSIS</span>
  24 
  25 <span class="pd">  less `whichpm Bar`</span>
  26 
  27 <span class="pd">=head1 DESCRIPTION</span>
  28 
  29 <span class="pd">Analogous to the UN*X command which.</span>
  30 
  31 <span class="pd">Even with TAB completion entering paths like</span>
  32 <span class="pd">F&lt;/afs/athena.mit.edu/user/u/s/user/lib/perl5/site_perl/5.8.0/IO/Pager&gt;</span>
  33 <span class="pd">can be gruesome. ~ makes it a bit more bearable</span>
  34 <span class="pd">F&lt;~/lib/perl5/site_perl/5.8.0/IO/Pager&gt;.</span>
  35 <span class="pd">Then inspiration struck, perl knows where its libraries are; modulo @INC.</span>
  36 <span class="pd">Better yet, you don&#39;t have to know if it&#39;s a core module or site specific</span>
  37 <span class="pd">nor architecture specific vs. platform independent.</span>
  38 
  39 <span class="pd">=head1 AUTHOR</span>
  40 
  41 <span class="pd">Jerrad Pierce &lt;jpierce@cpan.org&gt;</span>
  42 
  43 <span class="pd">=cut</span>
</pre>
<div style="float: right; font-size: 10pt"><a href="mod8.pod">View Source (POD)</a></div><br />
</body>
</html>
