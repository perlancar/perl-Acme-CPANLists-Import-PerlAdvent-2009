<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
   "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<!-- Generated by Pod::Advent 0.17 (Pod::Simple 3.10, Perl::Tidy 20071205) on 2009-12-02 22:24:17 -->
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<title>2009 Perl Advent Calendar: Support your local libraries!</title>
<link rel="stylesheet" href="../style.css" type="text/css" />
<link rel="alternate" type="text/plain" href="local_lib.pod" />
</head>
<body>
<h1><a href="../">Perl Advent Calendar 2009-12</a>-03</h1>
<h2 align="center">Support your local libraries!</h2>
<h3 align="center">by Stephen R. Scaffidi</h3>
<p><tt><a href="http://search.cpan.org/perldoc?local::lib">local::lib</a></tt> is a great tool for saving time and effort!</p>
<p>Best practices these days suggest that you should do your best to avoid installing CPAN modules as root, especially to the system's perl! Another best practice is to keep the modules for unrelated applications separate, lest an upgrade for one app break another. Furthermore, what if you want to experiment with the latest version of something but do not want to risk the stability of your system and apps? <tt>local::lib</tt> can help with all of this!</p>
<p>The two most common solutions for these scenarios?</p>
<p>Option 1: Build and install your own perl under your home directory and use nothing but that. Do it again for each application and experiment.</p>
<p>Option 2: Use the system perl, but install all the modules you need in a directory under your home dir. Make more directories as needed.</p>
<p><tt>local::lib</tt> is quite good at helping you manage option #2.</p>
<h2>Installing <tt>local::lib</tt></h2>
<p><span style="font-weight: bold">Before you proceed, make sure your <tt>~/.cpan</tt> dir is fully owned and writable by your user and that your cpan config (should be <tt>~/.cpan/CPAN/MyConfig.pm</tt>) is set up properly for building as a non-root user!</span><sup><a href="#footnote_cpan_config">1</a></sup> [<span style="font-style: italic">assuming one is a CPAN shell user - ed.</span>]</p>
<p>You want it available for everyone? Install in the usual way. Otherwise... if you either don't have root access or don't want to install <tt>local::lib</tt> globally, there's another solution: Bootstrapping.</p>
<p>There are detailed instructions for bootstrapping in <tt>local::lib</tt>'s documentation but here's a condensed version:</p>
<pre><span class="c">  user@host:~$ cpan
  cpan[1]> look local::lib
  user@host:~/.cpan/build/local-lib-1...$ perl Makefile.PL --bootstrap=~/perl5
  user@host:~/.cpan/build/local-lib-1...$ make && make test && make install
  user@host:~/.cpan/build/local-lib-1...$ exit
  cpan[2]> exit</span></pre>
<p>[<span style="font-style: italic">or the equivalent with manual tarball build, just add that <tt>--bootstrap=~/perl5</tt> to the Makefile.PL command. -ed.</span>]</p>
<p>Now, you'll want to update your shell config to make your new local lib available automagically. For example, if you use bash, do this:</p>
<pre><span class="c">  echo 'eval $(perl -I$HOME/perl5/lib/perl5 -Mlocal::lib)' >>~/.bashrc
  . ~/.bashrc</span></pre>
<p>You can do something similar with other shells, like csh<sup><a href="#footnote_csh">2</a></sup></p>
<h2>Putting <tt>local::lib</tt> to use:</h2>
<p>So, now that you have cpan configured and <tt>local::lib</tt> installed, give it a whirl! Try installing something you don't already have, logged in as an unprivileged user...</p>
<pre><span class="c">cpan TL1ng # I doubt any of you have (or need) this.</span></pre>
<p>When it's done, you will be able to find those modules under your <tt>~/perl5</tt> directory. Go ahead, install more. So far, everything I have tried installing using <tt>local::lib</tt> has worked! (if it fails, it will almost certainly fail being installed as root, too)</p>
<p>While you have added a command to your shell rc file, you may want this functionality in your code, to make it clear what you want in your <tt>@INC</tt>.</p>
<p>To do so, just add this in your code:</p>
<pre>
<span class="k">use</span> <span class="w">local::lib</span> <span class="q">q(~/perl5)</span><span class="sc">;</span>
</pre>

<p>It's that easy!</p>
<p>Oh and one more thing... the directory <tt>~/perl5</tt> is the default if you don't specify anything. Same goes for the <tt>--bootstrap</tt> option for the <tt>Makefile.PL</tt>! You can change it to anything you want, of course!</p>
<h2>Wrapping up...</h2>
<p>I find myself using <tt>local::lib</tt> for all sorts of things these days. For example, I keep my <tt>~/perl5</tt> dir under version control. If I mess something up, I can roll back at any time! Also, I now keep nearly all modules installed via CPAN there, and only use debian packaged modules for the system perl. My employer's website is now running out of a <tt>local::lib</tt> because it turns out the latest version of a certain CPAN module breaks things pretty bad!</p>
<p><tt>local::lib</tt> may not be your cup of tea, or you may not need it now... but when you finally do it's a great little hidden gem of the CPAN.</p>
<blockquote><p>I will likely use <tt>perl -Mlocal::lib=$HOME/advent/lib</tt> as it looks highly useful to keep stuff segregated, although <tt><a href="http://search.cpan.org/perldoc?inc">inc</a></tt> is a tool that pulls in a per-directory dotfile that modifies <tt><span class="i">@INC</span></tt> . - Eds</p>
</blockquote>
<h2>Footnotes:</h2>
<p><a name="footnote_cpan_config" id="footnote_cpan_config"></a>1. <span style="font-weight: bold">Take ownership of your <tt>~/.cpan</tt> dir and config!</span><br>
First thing you'll want is to make sure your CPAN client is configured correctly for building as yourself. So many people simply run <tt><span class="w">sudo</span> <span class="w">cpan</span></tt> that this really is worth mentioning! If that's what you have done, chances are your <tt>~/.cpan</tt> directory is actually owned by root! Furthermore, your config may be directing cpan to write to other places outside your home directory!<br>
So, we should fix all that...<br>
Step 1, Permissions: you can either<br>
- take ownership of your <tt>~/.cpan</tt> dir:<br>
<pre><span class="c">sudo chown -R `getent passwd $USER | cut -d':' -f3,4` ~/.cpan</span></pre>
- delete your <tt>~/.cpan</tt> and start over:<br>
<pre><span class="c">sudo rm -rf ~/.cpan</span></pre>
Step 2, CPAN client config:<br>
- create the config file if necessary:<br>
<pre><span class="c">mkdir -p ~/.cpan/CPAN && touch ~/.cpan/CPAN/MyConfig.pm</span></pre>
- edit to contain at least the following:<br>
<pre>
  <span class="i">$CPAN::Config</span> = <span class="s">{</span>
    <span class="q">&#39;cpan_home&#39;</span>         <span class="cm">=&gt;</span> <span class="q">qq[$ENV{HOME}/.cpan]</span><span class="cm">,</span>
    <span class="q">&#39;build_dir&#39;</span>         <span class="cm">=&gt;</span> <span class="q">qq[$ENV{HOME}/.cpan/build]</span><span class="cm">,</span>
    <span class="q">&#39;histfile&#39;</span>          <span class="cm">=&gt;</span> <span class="q">qq[$ENV{HOME}/.cpan/histfile]</span><span class="cm">,</span>
    <span class="q">&#39;keep_source_where&#39;</span> <span class="cm">=&gt;</span> <span class="q">qq[$ENV{HOME}/.cpan/sources]</span><span class="cm">,</span>
    <span class="q">&#39;prefs_dir&#39;</span>         <span class="cm">=&gt;</span> <span class="q">qq[$ENV{HOME}/.cpan/prefs]</span><span class="cm">,</span>
  <span class="s">}</span><span class="sc">;</span>
  <span class="n">1</span><span class="sc">;</span>
</pre>

Windows users, please note: you should use <tt>HOMEDIR</tt> instead of <tt>HOME</tt>.<br>
And that's it! If you blew away your <tt>~/.cpan</tt> you may now want to run cpan (as yourself!) and let it auto-configure everything else and then select your mirrors. Issue the <tt>o conf init</tt> command if it doesn't ask to configure things on it's own.<br>
</p>
<p><a name="footnote_csh" id="footnote_csh"></a>2. <span style="font-weight: bold">csh recipe</span><br>
<pre><span class="c">  perl -I$HOME/perl5/lib/perl5 -Mlocal::lib >> ~/.cshrc

  source ~/.cshrc</span></pre>
</p>
<div style="float: right; font-size: 10pt"><a href="local_lib.pod">View Source (POD)</a></div><br />
</body>
</html>
