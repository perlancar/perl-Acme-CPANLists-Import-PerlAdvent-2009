<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
   "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<!-- Generated by Pod::Advent 0.18 (Pod::Simple 3.10, Perl::Tidy 20090616) on 2009-12-17 00:25:05 -->
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<title>2009 Perl Advent Calendar: Stocking Stuffers</title>
<link rel="stylesheet" href="../style.css" type="text/css" />
<link rel="alternate" type="text/plain" href="mod16.pod" />
</head>
<body>
<h1><a href="../">Perl Advent Calendar 2009-12</a>-16</h1>
<h2 align="center">Stocking Stuffers</h2>
<h3 align="center">by Jerrad Pierce</h3>
<blockquote><p>I received some feedback on the operand of <a href="../../2009/8/">2009/8</a>'s entry, which led me to revisit the ensuing discussion when I unveiled <a href="http://perlmonks.org/?node=whichpm">whichpm</a>, as mod8.pl was originally dubbed.</p>
</blockquote>
<p>Old Saint Nick's a mighty fine perl hack, but with a couple hundred years worth of naughty or nice cloggin' his noggin there's not much room for the ins and outs of half of CPAN. That's why Santa uses <tt><a href="http://search.cpan.org/perldoc?pmtools">pmtools</a></tt><sup><a href="#footnote_install">1</a></sup>. <tt>pmtools</tt>, for when you can't remember all the details about a module.</p>
<pre><span class="c">nick@north# pmdesc `pminst Sock` 
Socket6 (0.20) - IPv6 related part of the C socket.h defines and structure manipulators
IO::Socket::INET6 (2.54) - Object interface for AF_INET|AF_INET6 domain sockets
IO::Socket::SSL (1.27) - Nearly transparent SSL encapsulation for IO::Socket::INET.</span></pre>
<p><tt><span class="w">pminst</span></tt> lists the names of installed modules matching the string provided. <tt><span class="w">pmdesc</span></tt> gives the one-line description from the NAME section of the specified module. Combined, we have a perl module apropos.</p>
<pre><span class="c">nick@north# pmpath Socket6
/usr/lib/perl5/Socket6.pm</span></pre>
<p><tt><span class="w">pmpath</span></tt> is <tt><a href="http://search.cpan.org/perldoc?pmtool">pmtool</a></tt>'s version of <tt><span class="w">whichpm</span></tt>, and it also uses <tt><span class="k">require</span></tt> to locate modules. Many <tt>pmtools</tt> call <tt><span class="w">pmpath</span></tt> which means your screen can become littered with extraneous errors because the command propogates messages from modules which fail to compile.</p>
<pre><span class="c">nick@north# pmeth Socket6
AUTOLOAD
bootstrap
carp
confess
constant
croak
gai_strerror
getaddrinfo
gethostbyname2
getipnodebyaddr
getipnodebyname
getnameinfo
in6addr_any
in6addr_loopback
inet_ntop
inet_pton
pack_sockaddr_in6
pack_sockaddr_in6_all
sockaddr_in6
unpack_sockaddr_in6
unpack_sockaddr_in6_all
as_heavy via Exporter
export via Exporter
export_fail via Exporter
export_ok_tags via Exporter
export_tags via Exporter
export_to_level via Exporter
import via Exporter
require_version via Exporter
[overridden] AUTOLOAD via DynaLoader
boot_DynaLoader via DynaLoader
[overridden] bootstrap via DynaLoader
bootstrap_inherit via DynaLoader
[overridden] croak via DynaLoader
dl_error via DynaLoader
dl_find_symbol via DynaLoader
dl_install_xsub via DynaLoader
dl_load_file via DynaLoader
dl_load_flags via DynaLoader
dl_undef_symbols via DynaLoader
dl_unload_file via DynaLoader
DOES via UNIVERSAL
VERSION via UNIVERSAL
can via UNIVERSAL
[overridden] import via UNIVERSAL
isa via UNIVERSAL</span></pre>
<p><tt><span class="w">pmeth</span></tt> lists all of the "methods" supplied by a module, including those it inherits. Overriden subroutines are flagged, and with a <a href="https://rt.cpan.org/Ticket/Display.html?id=52850">simple patch</a> so are <tt>constant</tt>s. Unfortunately, imported routines are not&hellip;</p>
<pre>
<span class="c">nick@north# pmfunc Socket6::AUTOLOAD</span>
<a name="AUTOLOAD"></a><span class="k">sub </span><span class="m">AUTOLOAD</span> <span class="s">{</span>
    <span class="k">my</span><span class="s">(</span><span class="i">$constname</span><span class="s">)</span><span class="sc">;</span>
    <span class="s">(</span><span class="i">$constname</span> = <span class="i">$AUTOLOAD</span><span class="s">)</span> =~ <span class="q">s/.*:://o</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$val</span> = <span class="i">constant</span><span class="s">(</span><span class="i">$constname</span><span class="cm">,</span> <span class="i">@_</span> ? <span class="i">$_</span>[<span class="n">0</span>] <span class="co">:</span> <span class="n">0</span><span class="s">)</span><span class="sc">;</span>
    <span class="k">if</span> <span class="s">(</span><span class="i">$!</span> != <span class="n">0</span><span class="s">)</span> <span class="s">{</span>
        <span class="k">my</span> <span class="s">(</span><span class="i">$pack</span><span class="cm">,</span> <span class="i">$file</span><span class="cm">,</span> <span class="i">$line</span><span class="s">)</span> = <span class="k">caller</span><span class="sc">;</span>
        <span class="w">croak</span> <span class="q">&quot;Your vendor has not defined Socket macro $constname, used&quot;</span><span class="sc">;</span>
    <span class="s">}</span>
    <span class="k">eval</span> <span class="q">&quot;sub $AUTOLOAD { $val }&quot;</span><span class="sc">;</span>
    <span class="k">goto</span> <span class="i">&amp;$AUTOLOAD</span><span class="sc">;</span>
<span class="s">}</span>
</pre>

<p>Emits the code for the specified routine.</p>
<pre><span class="c">nick@north# pmload WubFur
/usr/lib/perl/site_perl/5.10/Fur.pm</span></pre>
<p>Lists all of the other modules this module loads at compile time. <tt><span class="w">plxload</span></tt> does the same for perl scripts, and <tt><a href="http://search.cpan.org/perldoc?Devel::Loaded">Devel::Loaded</a></tt> can be used to also detect modules that are brought-in at run-time e.g; via <tt><span class="k">eval</span></tt>. This information can be useful for ensuring all dependencies are documented.</p>
<p>And a few more:</p>
<tt><span class="w">pman</span></tt><p>This wrapper around <tt>Pod::Text</tt> displays pod faster than perldoc, less some fancy output formatting, but not much faster than <tt><span class="w">man</span></tt> can show <tt><span class="w">pod2man</span></tt>'d output. Nor does it handle modules that separate POD from code properly.</p>
<tt><span class="w">pfgrep</span></tt><p>Like <tt><span class="w">perldoc</span> <span class="k">-f</span></tt>, but defaults to unpaged output which might be handy if you've never added <span style="font-weight: bold">-F</span> to <span style="font-style: italic">$ENV{LESS}</span>, etc.</p>
<tt><span class="w">podtoc</span></tt><p>One of several tools that doesn't call <tt><span class="w">pmpath</span></tt> itself so you'll want to do:</p>
<pre><span class="c">nick@north# podtoc `pmpath Socket6`
/usr/lib/perl5/Socket6.pm
 NAME
 SYNOPSIS
 DESCRIPTION
     *  inet_pton FAMILY, TEXT_ADDRESS
     *  inet_ntop FAMILY, BINARY_ADDRESS
     *  pack_sockaddr_in6 PORT, ADDR
     *  pack_sockaddr_in6_all PORT, FLOWINFO, ADDR, SCOPEID
     *  unpack_sockaddr_in6 NAME
     *  unpack_sockaddr_in6_all NAME
     *  gethostbyname2 HOSTNAME, FAMILY
     *  getaddrinfo NODENAME, SERVICENAME, [FAMILY, SOCKTYPE, PROTOCOL, FLAGS]
     *  getnameinfo NAME, [FLAGS]
     *  getipnodebyname HOST, [FAMILY, FLAGS]
     *  getipnodebyaddr FAMILY, ADDRESS
     *  gai_strerror ERROR_NUMBER
     *  in6addr_any
     *  in6add_loopback</span></pre>
<p>NOTE: The home-made POD parser used for speed doesn't handle formatting codes.</p>
<tt><span class="w">podgrep</span></tt><p>Another tool that doesn't call <tt><span class="w">pmpath</span></tt> to expand a supplied module name.</p>
<pre><span class="c">nick@north# podgrep -f -p unpack `pmpath Socket6`
/usr/lib/perl5/Socket6.pm chunk 26
    <span style="background-color:pink">unpack</span>_sockaddr_in6 NAME

/usr/lib/perl5/Socket6.pm chunk 28
    <span style="background-color:pink">unpack</span>_sockaddr_in6_all NAME

POD ERRORS
    Hey! The above document had some coding errors, which are explained
    below:

    Around line 3:
        '=item' outside of any '=over'

    Around line 5:
        You forgot a '=back' before '=head1'

    Around line 7:
        '=item' outside of any '=over'</span></pre>
<p><a name="footnote_install" id="footnote_install"></a>1. To install <tt>pmtools</tt> via CPAN you may need to refer to the included <tt>Devel::Loaded</tt> instead.<br>
</p>
<div style="float: right; font-size: 10pt"><a href="mod16.pod">View Source (POD)</a></div><br />
</body>
</html>
